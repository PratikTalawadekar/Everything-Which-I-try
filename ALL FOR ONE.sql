-- START FROM BASIC TO ADVANCE

CREATE DATABASE STARTER;
USE STARTER;
CREATE TABLE DEPT (
DEPTNO INT,
DNAME VARCHAR(12),
LOC VARCHAR(8)
);
INSERT INTO DEPT VALUES
( 1 , 'TRAINING' , 'BOMBAY'),
( 2 , 'IMPORT' , 'DELHI'),
( 3 , 'EXPORT' , 'CALCUTTA');
SELECT * FROM DEPT;

CREATE TABLE EMP (
EMPNO INT,
ENAME VARCHAR(8),
SAL INT,
CITY VARCHAR(10),
DEPT_NO INT
);

INSERT INTO EMP VALUES
(1 , 'ADAMS' , 1000 , 'MUMBAI' , 10 ),
(2 , 'BLAKE' , 2000 , 'DELHI' , 10 ),
(3 , 'FORD' , 2500 , 'INDORE' , 20 ),
(4 , 'ALLEN' , 3000 , 'JAIPUR' , 25 ),
(5 , 'KING' , 7000 , 'MUMBAI' , 30 ),
(6 , 'PRATIK' , 2500000 , 'MUMBAI' , 14 );
SELECT * FROM EMP;

SELECT ENAME FROM EMP;

SELECT * FROM EMP
WHERE DEPT_NO = 14;

SELECT * FROM EMP
WHERE SAL > 2000 | SAL <3000;

SELECT ENAME ,SAL , SAL * 12 "ANNUAL" FROM EMP;  -- sudo , alias table will be created .

SELECT DISTINCT CITY FROM EMP;

select * from emp where ename like 'a%';  -- returns only A wala values

SELECT * FROM EMP 
WHERE ENAME LIKE '%K%';  -- ANYWHERE K IS THERE 

SELECT * FROM EMP 
WHERE ENAME LIKE '__A%';  

SELECT * FROM EMP 
WHERE ENAME LIKE '____';  

SELECT * FROM EMP 
WHERE ENAME NOT LIKE 'A%';  

SELECT * FROM EMP
WHERE SAL BETWEEN 2000 AND 3000 ;

SELECT * FROM EMP
WHERE SAL NOT BETWEEN 2000 AND 3000 ;

SELECT * FROM EMP
WHERE ENAME BETWEEN 'A' AND 'D' ;

SELECT * FROM EMP
WHERE ENAME BETWEEN 'A' AND 'K';

SELECT * FROM EMP
WHERE DEPT_NO  IN (10, 20,14) ;

SELECT * FROM EMP
WHERE CITY IN ('MUMBAI', 'DELHI');

SELECT * FROM EMP
WHERE CITY NOT IN ('MUMBAI' , ' DELHI');

UPDATE EMP
SET SAL = 5999
WHERE EMPNO = 1;

SELECT * FROM EMP; 

UPDATE EMP
SET DEPT_NO = 3
WHERE ENAME = 'PRATIK';

UPDATE EMP
SET DEPT_NO = 29 , CITY = 'GOA' , ENAME = 'BEAR'
WHERE EMPNO = 2;
ROLLBACK;

DELETE FROM EMP
WHERE EMPNO = 1;
SELECT * FROM EMP;
DELETE FROM EMP
WHERE CITY  = 'DELHI';
DROP TABLE EMP;
show databases;

CREATE TABLE ALLL (
ID INT,
FNAME VARCHAR(12),
LNAME VARCHAR(8)
);

INSERT INTO ALLL VALUES
(1 , 'PRATIK' , 'T' ),
(2 , 'BHUSHAN' , 'T'),
(3 , 'PARTH' , 'T'),
(4 , 'SAILI' , 'T');

COMMIT;

UPDATE  ALLL SET FNAME = 'SAYLEEE' WHERE ID = 4; 
UPDATE  ALLL SET LNAME = 'KAR' WHERE ID = 3; 
SELECT * FROM ALLL;
SAVEPOINT ABC;
DELETE FROM ALLL WHERE ID = 4;
DELETE FROM ALLL WHERE ID = 2;
ROLLBACK TO ABC ;
DROP TABLE emp;

CREATE TABLE EMP(
FNAME VARCHAR(10),
LNAME VARCHAR(10)
);

INSERT INTO EMP VALUES
('ARUN' , 'PURUN'),
('TARUN' , ' ARUN'),
('SIRUN' , ' KIRUN'),
('NUTAN' , 'PURUN');
SELECT * FROM EMP;

SELECT CONCAT (FNAME , ' ' , LNAME) FROM EMP;

SELECT UPPER (FNAME) FROM EMP;
SELECT LOWER (LNAME) FROM EMP;

UPDATE EMP SET FNAME = UPPER(FNAME);

SELECT UPPER (FNAME) FROM EMP
UNION
SELECT LOWER (LNAME) FROM EMP;

SELECT CONCAT(UPPER(SUBSTR(FNAME , 1 , 1)) , LOWER(SUBSTR(LNAME , 2))) FROM EMP;

-- REPLACEMENT FOR INIT FUNCTION
SELECT CONCAT(UPPER(SUBSTR(FNAME , 1 , 1)) , LOWER(SUBSTR(FNAME , 2))) FROM EMP;  

SELECT LPAD (FNAME , 25 , ' * ') FROM EMP;

SELECT RPAD (FNAME , 15 , ' * ') FROM EMP;

SELECT LTRIM (FNAME) FROM EMP;
SELECT RTRIM (FNAME) FROM EMP;

SELECT TRIM (FNAME) FROM EMP;  -- DOES NOT WORKS IN MYSQL

SELECT SUBSTR(FNAME , 2 ) FROM EMP;

SELECT SUBSTR( LNAME , 3 , 2 ) FROM EMP;

SELECT REPLACE (LNAME , 'UN' , 'OOOO' )FROM EMP;

SELECT INSTR(FNAME , 'UN') FROM EMP;

DROP TABLE EMP;

CREATE TABLE EMP (
ENAME VARCHAR(8)
);

INSERT INTO EMP VALUES
('ANJALI'), ('BASIT') , ('CHETAN');
SELECT * FROM EMP;
INSERT INTO EMP VALUES
('PRATIK');

SELECT LENGTH (ENAME) FROM EMP;

SELECT ASCII (ENAME) FROM EMP;

SELECT ASCII(SUBSTR(ENAME , -1)) FROM EMP;

SELECT ASCII ('z') FROM EMP;

SELECT DISTINCT ASCII ('A') FROM EMP;

SELECT  ASCII ('Z') FROM DUAL;

SELECT 3*12 FROM DUAL;

Select 'WELCOME TO CDAC' FROM DUAL;

SHOW CHARACTER SET;

SELECT CHAR (65 USING UTF8) FROM DUAL;

SELECT * FROM EMP WHERE SOUNDEX(ENAME) = SOUNDEX ('PRTOK'); 
DROP TABLE EMP;

CREATE TABLE EMP (
SAL INT );

INSERT INTO EMP VALUES
(1234.567),
(1852.091),
(1375.825),
(1748.616),
(5949.290);

SELECT ROUND(SAL) FROM EMP;

SELECT ROUND(SAL , 2) FROM EMP;

SELECT ROUND(SAL, -3) FROM EMP;

SELECT TRUNCATE (SAL , -2) FROM EMP;

SELECT CEIL ( SAL ) FROM EMP;

SELECT FLOOR (SAL) FROM EMP;

SELECT TRUNCATE(3.6 , 0 ) , FLOOR(3.6);

SELECT TRUNCATE(-3.6 , 0 ) , FLOOR(-3.2);

SELECT SIGN(-15) FROM DUAL;

SELECT SIGN(15) FROM DUAL;

SELECT MOD(9,5) FROM DUAL;

SELECT MOD( 8.22 , 2.2 ) FROM DUAL;

SELECT POWER (5,3) FROM DUAL;

SELECT SQRT(81) FROM DUAL;

-- TRICK FOR FINDING CUBE ROOT
SELECT POWER (9 , 1/3) FROM DUAL;

SELECT ABS (-10) FROM DUAL;

SELECT SIN(1) FROM DUAL;

SELECT COS(1) FROM DUAL;

SELECT TAN(1) FROM DUAL;

SELECT LN(2) FROM DUAL;

SELECT LOG(10 , 95) FROM DUAL;

/* DATE FUNCTIONS */

SELECT SYSDATE() FROM DUAL;

SELECT NOW() , SLEEP(10) FROM DUAL;

SELECT SYSDATE() , NOW() , SLEEP(5) , SYSDATE() , NOW() FROM DUAL;

-- A DAY IS ADDED TO TODAYS DATE
SELECT ADDDATE(SYSDATE() , 1) FROM DUAL;

SELECT ADDDATE(SYSDATE() ,  -1) FROM DUAL;

DROP TABLE EMP;

CREATE TABLE EMP(
HIRE_DATE DATE );

INSERT INTO EMP VALUES
('2019-10-15'),
('2019-12-31'),
('2020-1-15');

SELECT * FROM EMP;

SELECT DATEDIFF( SYSDATE() , HIRE_DATE ) FROM EMP;

SELECT DATE_ADD(HIRE_DATE , INTERVAL 2 MONTH ) FROM EMP;

SELECT DATE_ADD(HIRE_DATE , INTERVAL -2 MONTH ) FROM EMP;

SELECT DATE_ADD(HIRE_DATE , INTERVAL 2 YEAR ) FROM EMP;

SELECT LAST_DAY(HIRE_DATE) FROM EMP;

SELECT DAYNAME(SYSDATE()) FROM EMP;

SELECT UPPER(DAYNAME(SYSDATE())) FROM EMP;

SELECT LOWER(DAYNAME(SYSDATE())) FROM DUAL;
 
SELECT SUBSTR(DAYNAME(SYSDATE()  3 , 2 )) FROM EMP;

SELECT ADDTIME ('2010-02-12 11:00:00','1') FROM DUAL;

SELECT ADDTIME ('2010-02-12 11:00:00','1:30:45:1234') FROM DUAL;

CREATE TABLE EMP (
ENAME VARCHAR(1),
SAL INT,
COMM INT 
);

INSERT INTO EMP VALUES
('A' , 5000 , 500),
('B' , 6000 , NULL),
('C' , NULL , 700);

SELECT * FROM EMP WHERE SAL IS NULL;

SELECT * FROM EMP WHERE COMM IS NOT NULL;

SELECT SAL+COMM FROM EMP;

SELECT IFNULL (SAL,0) + IFNULL (COMM,0) FROM EMP;

SELECT IFNULL(COMM,0) FROM EMP;

SELECT IFNULL(CITY , 'MUMBAI') FROM DUAL;

DROP TABLE EMP;

CREATE TABLE EMP(
SAL INT,
DEPT_NO INT 
);

INSERT INTO EMP VALUES
(1000 , 10),
(2000 , 10 ),
(3000 , 20),
(4000 , 30),
(5000 , 40);
DROP TABLE EMP ;
SELECT GREATEST (SAL , 3000) FROM EMP;  -- MORE THAN 3000

SELECT GREATEST (SAL*0.1 , 300) FROM EMP;

SELECT LEAST (SAL , 3000) FROM EMP;

SELECT LEAST (SAL*0.1 , 1000) FROM EMP;

CREATE TABLE EMP(
SAL INT , 
DEPT_NO INT 
);

-- MOST POWERFULL STATEMENT IN MYSQL
SELECT 
CASE
WHEN DEPT_NO = 10 THEN 'TRAINING'
WHEN DEPT_NO = 20 THEN 'EXPORTS'
WHEN DEPT_NO = 30 THEN 'SALES'
ELSE 'OTHERS'
END
FROM EMP;

SELECT 
CASE
WHEN DEPT_NO = 10 THEN 'TEN'
WHEN DEPT_NO = 20 THEN 'TWENTY'
WHEN DEPT_NO = 30 THEN 'THIRTY'
END 'DEPTNAME'
FROM EMP;

DROP TABLE EMP;

/* ************************************************************************** */
CREATE TABLE EMP (
EMPNO INT ,
ENAME VARCHAR(8),
SAL INT,
DEPTNO INT,
JOB VARCHAR(1),
MGR INT 
);

INSERT INTO EMP VALUES
( 1 , 'ARUN' , 8000 , 1 , 'M' , 4),
( 2 , 'ALI' , 7000 , 1 , 'C' , 1),
( 3 , 'KIRUN' , 3000 , 1 , 'C' , 1),
( 4 , 'JACK' , 9000 , 2 , 'M' , NULL),
( 5 , 'THOMAS' , 8000 , 2 , 'C' , 4);

SELECT * FROM EMP;

SELECT
CASE
WHEN JOB = 'M' THEN 'MANAGER'
WHEN JOB = 'C' THEN 'CLERK'
END 'JOB'
FROM  EMP;

SELECT SUM(SAL) FROM EMP;

SELECT SUM(IFNULL (SAL , 0)) FROM EMP;

SELECT AVG(SAL) FROM EMP;

SELECT AVG(IFNULL (SAL, 0)) FROM EMP;

SELECT MIN(IFNULL(SAL , 0)) FROM EMP;

SELECT MAX(SAL) FROM EMP;

SELECT COUNT(SAL) FROM EMP;

SELECT COUNT(*) FROM EMP;

SELECT SUM(SAL) FROM EMP
WHERE DEPTNO = 1;

SELECT MAX (SAL) FROM EMP
WHERE JOB = 'M';

SELECT COUNT(*) FROM EMP
WHERE SAL>7000;

SELECT MAX(SAL)/MIN(SAL) FROM EMP;

SELECT AVG(IFNULL(SAL , 0)) FROM EMP;

-- GROUP BY CLAUSS
SELECT DEPTNO , SUM(SAL) FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO , SUM(SAL) FROM EMP
GROUP BY DEPTNO;

SELECT COUNT(*), MIN(SAL),MAX(SAL),SUM(SAL) FROM EMP;

SELECT DEPTNO , SUM(SAL) FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO , MAX(SAL) FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO , MIN(SAL) FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO , COUNT(*) FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO , SUM(SAL) FROM EMP
WHERE SAL > 7000
GROUP BY DEPTNO;

SELECT DEPTNO , JOB , SUM(SAL) FROM EMP
GROUP BY JOB, DEPTNO;

SELECT DEPTNO , SUM(SAL) FROM EMP
GROUP BY JOB, DEPTNO;

-- ORDER BY 
SELECT DEPTNO , SUM(SAL) FROM EMP
GROUP BY DEPTNO
ORDER BY SUM(SAL);

SELECT * FROM EMP;

CREATE TABLE DEPT(
DEPTNO INT,
DNAME VARCHAR(4),
LOC VARCHAR(3)
);

INSERT INTO DEPT VALUES
( 1 , 'TRN' , 'BBY' ),
( 2 , 'EXP' , 'DLH' ),
( 3 , 'MKTG' , 'CAL');

SELECT * FROM DEPT;

SELECT ENAME , DEPTNO FROM EMP;

SELECT DNAME , ENAME  FROM  EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO;

SELECT DNAME , ENAME  FROM  DEPT , EMP    -- SLOW HA YE
WHERE DEPT.DEPTNO = EMP.DEPTNO;

SELECT DNAME , ENAME  FROM  EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO
ORDER BY 1;

SELECT DNAME , LOC , ENAME , JOB , SAL FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO
ORDER BY 1;

SELECT DEPTNO , DNAME , LOC , EMPNO , ENAME , JOB , SAL , MGR FROM EMP, DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO ;

SELECT DEPT.DEPTNO , LOC ,ENAME , JOB , SAL FROM EMP , DEPT
WHERE DEPT.DETNO = EMP.DEPTNO
ORDER BY 1;

SELECT EMP.DEPTNO , LOC ,ENAME , JOB , SAL FROM EMP , DEPT
WHERE DEPT.DETNO = EMP.DEPTNO
ORDER BY 1;

SELECT DNAME , SUM(SAL) FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO
GROUP BY DNAME;

SELECT UPPER(DNAME) , SUM(SAL) FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO
GROUP BY UPPER(DNAME)
HAVING SUM(SAL)>10000
ORDER BY 1;

SELECT LOWER(DNAME) , SUM(SAL) FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO
GROUP BY LOWER(DNAME)
HAVING SUM(SAL)>10000
ORDER BY 1;

-- INEQUI-JOIN
SELECT DNAME , ENAME FROM EMP , DEPT
WHERE DEPT.DEPTNO != EMP.DEPTNO
ORDER BY 1;

SELECT DNAME , ENAME FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO
UNION																			-- BEST METHOD FOR JOINING 2 OR MORE METHOD
SELECT DNAME , ENAME FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO;

SELECT DNAME , ENAME FROM EMP RIGHT OUTER JOIN DEPT ON
(DEPT.DEPTNO = EMP.DEPTNO);

SELECT DNAME , ENAME FROM EMP LEFT OUTER JOIN DEPT ON
(DEPT.DEPTNO = EMP.DEPTNO);

SELECT DNAME , ENAME FROM EMP RIGHT OUTER JOIN DEPT ON 
(DEPT.DEPTNO = EMP.DEPTNO)
UNION																			-- FULL OUTERJOIN
SELECT DNAME , ENAME FROM EMP LEFT OUTER JOIN DEPT ON
(DEPT.DEPTNO = EMP.DEPTNO);

SELECT DNAME , ENAME  FROM DEPT , EMP;

SELECT A.ENAME , B.ENAME FROM EMPB , EMPA
WHERE A.MGR = B.EMPNO;

CREATE TABLE DEPTHEAD(
DEPTNO INT,
DHEAD VARCHAR(5)
);

INSERT INTO DEPTHEAD VALUES
(1 ,'ARUN'),
(2 ,'JACK');

SELECT * FROM DEPTHEAD;
SELECT DNAME , ENAME ,DHEAD FROM EMP,DEPT ,DEPTHEAD
WHERE DEPTHEAD.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = EMP.DEPTNO;

DROP TABLE PROJECTS;

CREATE TABLE PROJECTS (
PROJECT_NO VARCHAR(2),
CLIENT_NAME VARCHAR(22),
PROJ_DTLS VARCHAR(12)
);

INSERT INTO PROJECTS VALUES
( 'P1' , 'DELOITTE' , 'CGS' ),
( 'P2' , 'MORGAN STANLEY' , 'AMS' ),
( 'P3' , 'BNP PARIBOS' , 'MARCOS DEV' ),
( 'P4' , 'ICICI BANK' , 'PP5' ),
( 'P5' , 'AMFI' , 'WEBSITE DEV' );

SELECT * FROM PROJECTS;

SELECT CLIENT_NAME , PROJECT_DTLS , ENAME 
FROM PROJECTS_EMP , EMP ,PROJECTS
WHERE PROJECTS.PROJECT_NO = PROJECTS_EMP.EMPNO
ORDER BY 1,2,3;

-- SUB-QUERIES
SELECT ENAME , MIN(SAL) FROM EMP;

SELECT ENAME FROM EMP
WHERE SAL  = 
(SELECT MIN(SAL) FROM EMP);

-- DISPLAY 2ND LARGEST SAL
SELECT MAX(SAL) FROM EMP
WHERE SAL<
(SELECT MAX(SAL) FROM EMP);
 
SELECT DEPTNO FROM EMP
WHERE ENAME = 'THOMAS';

SELECT * FROM EMP
WHERE JOB = 
(SELECT JOB FROM EMP WHERE ENAME = 'KIRUN');

/* YOU CANNOT DELETE OR UPDATE FROM A TABLE WHICH YOU ARE CURRENTLY USING
THEREFORE THE SOLUTION FOR THIS IS GIVEN BELOW */
DELETE FROM EMP
WHERE DEPTNO = 
(SELECT TEMPP.DEPTNO FROM (SELECT DEPTNO FROM EMP WHERE ENAME = 'THOMAS' ) AS TEMPP);

SELECT * FROM EMP; 

UPDATE EMP SET SAL = 10000
WHERE JOB = 
(SELECT TEMPP.JOB FROM
(SELECT JOB FROM EMP WHERE ENAME = 'KIRUN') AS TEMPP);

-- DISPLAY ALL ROWS THAT ARE RECIEVING A SAL EQUAL TO ANY
SELECT * FROM EMP
WHERE SAL  = ANY
(SELECT SAL FROM EMP WHERE JOB = 'M');

SELECT * FROM EMP
WHERE SAL IN							-- ( LOGICAL OR )
(SELECT SAL FROM EMP WHERE JOB = 'M');

SELECT * FROM EMP
WHERE JOB != 'M' AND SAL IN
(SELECT SAL FROM EMP WHERE JOB = 'M');

SELECT * FROM EMP
WHERE SAL > ALL     -- (LOGICAL AND)
(SELECT SAL FROM EMP
WHERE JOB = 'M');

SELECT * FROM EMP
WHERE SAL > 
(SELECT MAX(SAL) FROM EMP
WHERE JOB = 'M');

SELECT SUM(SAL) FROM EMP
GROUP BY DEPTNO;

SELECT MAX(SUM_SAL) FROM
(SELECT SUM(SAL) SUM_SAL FROM EMP
GROUP BY DEPTNO) AS TEMPP;

SELECT DEPTNO , SUM(SAL) FROM EMP
GROUP BY DEPTNO
HAVING SUM(SAL) = 
(SELECT MAX(SUM_SAL) FROM
(SELECT SUM(SAL) SUM_SAL FROM EMP
GROUP BY DEPTNO) AS TEMPP) ; 

SELECT DNAME , SUM(SAL) FROM EMP ,DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO 
GROUP BY DNAME
HAVING SUM(SAL) = 
(SELECT MAX(SUM_SAL) FROM 
(SELECT SUM(SAL) SUM_SAL FROM EMP
GROUP BY DEPTNO) AS TEMPP) ;

SELECT DEPTNO FROM EMP;

SELECT DISTINCT DEPTNO FROM EMP;   -- DISTINCT(DUPLICATE REMOVAL) FOR REMOVAL OF SIMILAR TYPES

SELECT DNAME FROM DEPT
WHERE DEPTNO = ANY									-- ANY = 
(SELECT DISTINCT DEPTNO FROM EMP);

SELECT DNAME FROM DEPT
WHERE DEPTNO IN
(SELECT DISTINCT DEPTNO FROM EMP);

SELECT DNAME FROM DEPT
WHERE DEPTNO NOT IN
(SELECT DISTINCT DEPTNO FROM EMP);

-- SOLN #2
SELECT DNAME FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO;

SELECT DISTINCT DNAME FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO;

-- SOLN #3
SELECT DNAME FROM DEPT WHERE EXISTS
(SELECT DEPTNO FROM EMP
WHERE DEPT.DEPTNO = EMP.DEPTNO);

SELECT DNAME FROM DEPT WHERE EXISTS 
(SELECT DEPTNO FROM EMP
WHERE DEPT.DEPTNO = EMP.DEPTNO);

SELECT DNAME FROM DEPT WHERE NOT EXISTS
(SELECT DEPTNO FROM EMP
WHERE DEPT.DEPTNO = EMP.DEPTNO);

-- SET OPERATOR

CREATE TABLE EMP1(
EMPNO INT,
ENAME CHAR(1)
);

INSERT INTO EMP1 VALUES
(1 , 'A'),
(2 , 'B'),
(3 , 'C');

DROP TABLE EMP2;

CREATE TABLE EMP2(
EMPNO INT,
ENAME CHAR(1)
);

INSERT INTO EMP1 VALUES
(1 , 'A'),
(2 , 'B'),
(4 , 'D'),
(5 , 'E');

SELECT EMPNO , ENAME FROM EMP1
UNION
SELECT EMPNO , ENAME FROM EMP2;

SELECT EMPNO , ENAME FROM EMP1
UNION
SELECT EMPNO , ENAME FROM EMP2
ORDER BY 1; 
/*
SELECT EMPNO , ENAME FROM EMP1
MINUS																	-- DOES NOT WORKS IN MYSQL
SELECT EMPNO , ENAME FROM EMP2
ORDER BY 1; 									 

SELECT EMPNO , ENAME FROM EMP1
INTERSECT															-- DOES NOT WORKS IN MYSQL
SELECT EMPNO , ENAME FROM EMP2
ORDER BY 1; 
*/

SELECT  ENAME ,SAL FROM EMP;

CREATE TABLE EMP0(
EMPNO INT,
ENAME VARCHAR(5),
SAL INT );

DROP TABLE EMP0;

INSERT INTO EMP0 VALUES
(1,'SCOTT' , 3000),
(2 , 'KING' , 5000);

SELECT * FROM EMP0;

ALTER TABLE EMP0 ADD GST FLOAT;   			-- NEW COLUMN IS ADDED

UPDATE EMP0  SET GST = SAL*0.18;  				-- THE NEW COLUMN IS UPDATED

ALTER  TABLE EMP0 MODIFY ENAME VARCHAR(20);

UPDATE EMP0 SET ENAME = NULL;

ALTER TABLE EMP0 MODIFY ENAME VARCHAR(20);

UPDATE EMP0 SET ENAME = X;

ALTER TABLE EMP0 DROP COLUMN X;

ALTER TABLE EMP0 MODIFY EMPNO CHAR(4);

INSERT INTO EMP0 SELECT * FROM EMP2 ;

SELECT * FROM EMP2 WHERE DEPTNO = 10;

SELECT * FROM EMP2;

-- TO COPY A TABLE
CREATE TABLE EMP_COPY
AS
SELECT * FROM EMP;

-- TO COPY CERTAIN ROWS
CREATE TABLE EMP_COPY
AS
SELECT EMPNO , ENAME FROM EMP;

-- METHOD #2
CREATE TABLE EMP_STRUCT
AS
SELECT * FROM EMP;

TRUNCATE TABLE EMP_STRUCT;
TRUNCATE TABLE EMP_COPY;

CREATE TABLE EMP_STRUCT
AS
SELECT * FROM  EMP WHERE 1 = 2;

-- DELETE AND TRUNCATE WALA OPERATIONS
CREATE TABLE EMP_COPY
AS
SELECT * FROM EMP DEPT_NO = 10;

TRUNCATE TABLE EMP;

INSERT INTO EMP SELECT * FROM EMP_COPY;

DROP TABLE EMP_COPY;

SELECT * FROM EMP_COPY;

-- RENAME A COLUMN
CREATE TABLE EMP_COPY
AS 
SELECT EMPNO , ENAME ,SAL FROM EMP; 

DROP TABLE EMP;

RENAME TABLE EMP_COPY TO EMP;

SELECT * FROM EMP;

CREATE TABLE EMP (
EMPNO INT,
ENAME VARCHAR(1),
SAL INT,
DEPTNO INT
);

INSERT INTO EMP VALUES
(5, 'A' , 5000 , 1),
(4, 'B' , 6000 , 1),
(1, 'C' , 7000 , 1),
(2, 'D' , 9000 , 2),
(3, 'E' , 8000 , 2);

SELECT * FROM EMP;

SELECT * FROM EMP  WHERE EMPNO = 1;

SELECT * FROM EMP  WHERE EMPNO = 2;

SELECT * FROM EMP  WHERE SAL > 5000;

SELECT * FROM EMP  WHERE EMPNO > 1;

SELECT DNAME , ENAME FROM EMP , DEPT
WHERE DEPT.DEPTNO = EMP.DEPTNO;

CREATE INDEX I_EMP_SAL ON EMP(EMPNO);

SHOW INDEX FROM EMP;

USE INFORMATION_SCHEMA;
SELECT * FROM STATISTICS;

-- GRANT AND REVOKE
GRANT SELECT ON EMP TO SCOTT;
 
 GRANT SELECT ON EMP TO ASSIGN1;
 
 SELECT * FROM INFORMATION _SCHEMA
 TABLE PRIVILEGES;
 
 SELECT * FROM cdacmumbaipgdacsep2021.emp;
 
 update cdacmumbaipgdacsep2021.emp;
 
/* PRIMARY KEY */ 
CREATE TABLE EMP (
EMPNO CHAR(4) PRIMARY KEY,
ENAME VARCHAR (25),
SAL FLOAT,
DEPTNO INT 
);

INSERT INTO EMP VALUES ( '5' , 'F' , 5000 , 2);

SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINS;

SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINS
WHERE TABLE_SCHEMA = cdacmumbaipgdacsep2021;

SELECT  * FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
WHERE TABLE_NAME = 'EMP';

SHOW INDEXES FROM EMP;

ALTER TABLE EMP DROP PRIMARY KEY;

ALTER TABLE EMP ADD PRIMARY KEY(EMP NO);

CREATE TABLE EMP 
(
EMPNO CHAR(4),
ENAME VARCHAR(25),
SAL FLOAT,
DEPTNO INT,
PRIMARY KEY (DEPTNO , EMPNO)
); 

SHOW INDEXES FROM EMP;

ALTER TABLE EMP DROP PRIMARY KEY;

ALTER TABLE EMP ADD PRIMARY KEY (DEPTNO , EMPNO);

/* NOTNULL WALA */
CREATE TABLE EMP 
(
EMPNO CHAR(4),
ENAME VARCHAR(25) NOT NULL,
SAL FLOAT,
DEPTNO INT,
PRIMARY KEY (DEPTNO , EMPNO)
); 

ALTER TABLE EMP MODIFY  ENAME VARCHAR(25) NULL;

 TABLE EMP 
(
EMPNO CHAR(4),
ENAME VARCHAR(25),
SAL FLOAT,
DEPTNO INT,
MOBILE_NO CHAR(15) UNIQUE,
UNIQUE KEY (DEPTNO , EMPNO)
); 

SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINT;

DROP INDEX MOBILE_NO ON EMP;

DROP INDEX DEPTNO ON EMP;

ALTER TABLE EMP
ADD UNIQUE(MOB_NO);

ALTER TABLE EMP
AND CONSTRAINT U_EMP_MOBILE_NO UNIQUE(MOBILE_NO);

CONSTRAINT U_EMP_MOBILE_NO;

 TABLE EMP 
(
EMPNO CHAR(4),
ENAME VARCHAR(25),
SAL FLOAT,
DEPTNO INT,
MOBILE_NO CHAR(15),
UNIQUE KEY (DEPTNO , EMPNO)
UNIQUE (MOBILE_NO)
); 

CREATE TABLE DEPT
(
DEPTNO INT PRIMARY KEY,
DNAME VARCHAR(15),
LOC VARCHAR(10)
);

 TABLE EMP 
(
EMPNO CHAR(4) PRIMARY KEY,
ENAME VARCHAR(25),
SAL FLOAT,
DEPTNO INT,
MGR CHAR(4),
CONSTRAINT FK_EMP_DEPTNO FOREIGN KEY (MGR)
REFERENCE DEPTNO (DEPTNO),
CONSTRAINT FK_EMP_MGR FOREIGN KEY (MGR)
REFERENCE EMP (EMPNO)
); 

-- CONSTRAINT FK_EMP_DEPTNO;
-- CONSTRAINT FK_EMP_MGR;

SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINT;

SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINT
WHERE TABLE_SCHEMA = 'cdacmumbaipgdacsep2021';

SELECT * FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
WHERE TABLE_SCHEMA = 'EMP';

ALTER TABLE EMP DROP FOREIGN KEY FK_EMP_DEPTNO;



